name: Client Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    defaults:
      run:
        working-directory: ./client
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    
    # Cache Playwright binaries
    - uses: actions/cache@v3
      id: playwright-cache
      with:
        path: |
          ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
    - run: npm ci
    - run: npx playwright install --with-deps
      if: steps.playwright-cache.outputs.cache-hit != 'true'
    - run: npx playwright install-deps
      if: steps.playwright-cache.outputs.cache-hit == 'true'

    - name: Run Playwright tests
      run: npx playwright test
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: ./client/playwright-report/
        retention-days: 30

    # Make the current directory available as a GitHub Actions artifact
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: client
        # Ignore node_modules and playwright-report
        path: |
          ./client
          !./client/node_modules 
          !./client/playwright-report
        retention-days: 30

  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
    # Download the playwright-report artifact
      - uses: actions/download-artifact@v3
        with:
          name: playwright-report
          path: playwright-report
    
    # Create zip files
      - name: Create client artifact
        run: zip -r client.zip client -x client/node_modules/\* client/playwright-report/\*
      - name: Create server artifact
        run: zip -r server.zip server -x server/node_modules/\*
      - name: Create playwright-report artifact
        run: zip -r playwright-report.zip playwright-report
    # Create release
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.12.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Auto Release
          tag: auto-release
          allowUpdates: true
          artifacts: |
            client.zip
            server.zip
            playwright-report.zip